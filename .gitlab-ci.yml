stages:
  - install
  - test
  - build
  - push
  - deploy

### INSTALL ###
install_dependencies:
  image: node:gallium-alpine3.16
  stage: install
  script:
    - yarn install
  artifacts:
    paths:
      - node_modules/
    expire_in: 30 mins

### TEST ###
run_unit_tests:
  stage: test
  needs:
    - install_dependencies
  dependencies:
    - install_dependencies
  script:
    # - yarn test
    - echo "Running tests"
  artifacts:
    paths:
      - junit.xml
      - node_modules/
    reports:
      junit: junit.xml
    expire_in: 30 mins

### BUILD ###
run_build:
  image: node:gallium-alpine3.16
  stage: build
  needs:
    - run_unit_tests
  dependencies:
    - run_unit_tests
  only:
    - develop
    - /^v.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)(?:0|[a-z]*)$/
  script:
    - cp ${nginx} default.conf
    - >
      if [ $CI_COMMIT_BRANCH == "develop" ]; then
        echo 'Use develop .env'
        cp ${ENV_DEV} .env
      else
        echo 'Use master .env'
        cp ${ENV_PROD} .env
      fi
    - yarn build
  artifacts:
    paths:
      - .env
      - dist/
      - default.conf
      - docker-compose.yml
      - Dockerfile
    expire_in: 1 day

### DEPLOY TO DEVELOP ###
run_deploy_dev:
  image: docker/compose:latest
  stage: deploy
  needs:
    - run_build
  dependencies:
    - run_build
  variables:
    GIT_STRATEGY: none
  only:
    - develop
  tags:
    - develop
  script:
    - docker-compose down
    - docker-compose up -d --build

### DEPLOY TO PRODUCTION ###
run_deploy_prod:
  image: docker/compose:latest
  stage: deploy
  needs:
    - run_build
  dependencies:
    - run_build
  variables:
    GIT_STRATEGY: none
  only:
    - master
    - /^v.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)\.(?:0|[1-9]\d*)(?:0|[a-z]*)$/
  except:
    - branches
  script:
    - docker-compose down
    - docker-compose up -d --build
